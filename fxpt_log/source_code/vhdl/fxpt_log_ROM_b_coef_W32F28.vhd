-------------------------------------------------------------------
-- Note: This is machine generated code.  Do not hand edit.
--       Modify Matlab function fxpt_log_vhdl_code_gen_ROM_b_coef.m instead.
--       This file was auto generated on 24-Jun-2017 18:23:26
--       This VDHL file creates a ROM of bi=(1+2^-i) coefficients to be used in
--       calculating the fixed-point log() function
--       using multiplicative normalization.
-------------------------------------------------------------------
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity fxpt_log_ROM_b_coef_W32F28 is
   port (
      clock     : in  std_logic;
      address   : in  std_logic_vector( 4 downto 0);
      b_coef    : out std_logic_vector(31 downto 0)
   );
end entity;

architecture rtl of fxpt_log_ROM_b_coef_W32F28 is
begin
   process (clock) is
   begin
       if(rising_edge(clock)) then
           case (address) is  -- i=address;  bi=(1+2^-i) 
              when "00000" => b_coef <= "00100000000000000000000000000000";  -- bi =  010.0000000000000000000000000000 = 20000000
              when "00001" => b_coef <= "00011000000000000000000000000000";  -- bi =  001.1000000000000000000000000000 = 18000000
              when "00010" => b_coef <= "00010100000000000000000000000000";  -- bi =  001.0100000000000000000000000000 = 14000000
              when "00011" => b_coef <= "00010010000000000000000000000000";  -- bi =  001.0010000000000000000000000000 = 12000000
              when "00100" => b_coef <= "00010001000000000000000000000000";  -- bi =  001.0001000000000000000000000000 = 11000000
              when "00101" => b_coef <= "00010000100000000000000000000000";  -- bi =  001.0000100000000000000000000000 = 10800000
              when "00110" => b_coef <= "00010000010000000000000000000000";  -- bi =  001.0000010000000000000000000000 = 10400000
              when "00111" => b_coef <= "00010000001000000000000000000000";  -- bi =  001.0000001000000000000000000000 = 10200000
              when "01000" => b_coef <= "00010000000100000000000000000000";  -- bi =  001.0000000100000000000000000000 = 10100000
              when "01001" => b_coef <= "00010000000010000000000000000000";  -- bi =  001.0000000010000000000000000000 = 10080000
              when "01010" => b_coef <= "00010000000001000000000000000000";  -- bi =  001.0000000001000000000000000000 = 10040000
              when "01011" => b_coef <= "00010000000000100000000000000000";  -- bi =  001.0000000000100000000000000000 = 10020000
              when "01100" => b_coef <= "00010000000000010000000000000000";  -- bi =  001.0000000000010000000000000000 = 10010000
              when "01101" => b_coef <= "00010000000000001000000000000000";  -- bi =  001.0000000000001000000000000000 = 10008000
              when "01110" => b_coef <= "00010000000000000100000000000000";  -- bi =  001.0000000000000100000000000000 = 10004000
              when "01111" => b_coef <= "00010000000000000010000000000000";  -- bi =  001.0000000000000010000000000000 = 10002000
              when "10000" => b_coef <= "00010000000000000001000000000000";  -- bi =  001.0000000000000001000000000000 = 10001000
              when "10001" => b_coef <= "00010000000000000000100000000000";  -- bi =  001.0000000000000000100000000000 = 10000800
              when "10010" => b_coef <= "00010000000000000000010000000000";  -- bi =  001.0000000000000000010000000000 = 10000400
              when "10011" => b_coef <= "00010000000000000000001000000000";  -- bi =  001.0000000000000000001000000000 = 10000200
              when "10100" => b_coef <= "00010000000000000000000100000000";  -- bi =  001.0000000000000000000100000000 = 10000100
              when "10101" => b_coef <= "00010000000000000000000010000000";  -- bi =  001.0000000000000000000010000000 = 10000080
              when "10110" => b_coef <= "00010000000000000000000001000000";  -- bi =  001.0000000000000000000001000000 = 10000040
              when "10111" => b_coef <= "00010000000000000000000000100000";  -- bi =  001.0000000000000000000000100000 = 10000020
              when "11000" => b_coef <= "00010000000000000000000000010000";  -- bi =  001.0000000000000000000000010000 = 10000010
              when "11001" => b_coef <= "00010000000000000000000000001000";  -- bi =  001.0000000000000000000000001000 = 10000008
              when "11010" => b_coef <= "00010000000000000000000000000100";  -- bi =  001.0000000000000000000000000100 = 10000004
              when "11011" => b_coef <= "00010000000000000000000000000010";  -- bi =  001.0000000000000000000000000010 = 10000002
              when "11100" => b_coef <= "00010000000000000000000000000001";  -- bi =  001.0000000000000000000000000001 = 10000001
              when "11101" => b_coef <= "00010000000000000000000000000000";  -- bi =  001.0000000000000000000000000000 = 10000000
              when "11110" => b_coef <= "00010000000000000000000000000000";  -- bi =  001.0000000000000000000000000000 = 10000000
              when "11111" => b_coef <= "00010000000000000000000000000000";  -- bi =  001.0000000000000000000000000000 = 10000000
              when others  => b_coef <= (others => '0');
           end case;
        end if;
     end process;
end rtl;
